analyze_image:
  description: >
    Analyze the engineering image located at {image_path} and create a PRECISE, TECHNICAL description 
    of the 3D CAD design that can be directly converted into OpenSCAD code by GPT-4o.
    
    CRITICAL REQUIREMENTS - You MUST provide EXACT technical specifications:
    
    1. **DIMENSIONS AND MEASUREMENTS**:
       - Estimate and provide EXACT dimensions in millimeters (length, width, height, diameter, radius)
       - Use reference objects in the image to estimate scale (e.g., "appears to be 200mm long based on typical hand size")
       - Provide specific measurements even if estimated: "approximately 150mm x 100mm x 50mm"
       - Include all visible dimensions and proportions
    
    2. **GEOMETRIC PRIMITIVES IDENTIFICATION**:
       - Identify EXACT basic shapes: cube, cylinder, sphere, cone, pyramid, wedge, etc.
       - Specify dimensions for each primitive: "rectangular base 200mm x 150mm"
       - Note if shapes are regular or irregular
       - Identify if objects are symmetrical or asymmetrical
    
    3. **SPATIAL RELATIONSHIPS AND POSITIONING**:
       - Describe precise positioning: "centered at origin", "offset 25mm from center"
       - Specify angles and rotations: "rotated 45 degrees around Z-axis"
       - Note alignment: "parallel to X-axis", "perpendicular to base"
       - Describe stacking or layering: "mounted on top of", "embedded within"
    
    4. **BOOLEAN OPERATIONS AND COMPLEX GEOMETRY**:
       - Identify unions, differences, intersections between elements
       - Describe holes, cutouts, cavities: "circular hole 20mm diameter through center"
       - Note fillets, chamfers, bevels: "2mm fillet on all edges"
       - Describe patterns or arrays: "array of 4 holes spaced 30mm apart"
    
    5. **TRANSFORMATIONS AND MODIFICATIONS**:
       - Note scaling: "uniformly scaled by 1.5x"
       - Describe translations: "moved 50mm in positive X direction"
       - Specify rotations: "rotated 90 degrees around Y-axis"
       - Note mirroring or symmetry operations
    
    6. **FEATURES AND DETAILS**:
       - Describe surface features: "textured surface", "smooth finish"
       - Note material properties if visible: "appears to be solid", "hollow structure"
       - Identify functional elements: "mounting holes", "grip patterns"
       - Describe any text, logos, or markings
    
    7. **CONSTRAINTS AND RELATIONSHIPS**:
       - Specify dimensional relationships: "height is 2x the width"
       - Note geometric constraints: "all corners are 90 degrees"
       - Describe proportional relationships: "diameter is 1/3 of total length"
       - Identify any design rules or patterns
    
    TECHNICAL LANGUAGE REQUIREMENTS:
    - Use precise geometric terminology: "triangular prism", "cylindrical bore", "rectangular extrusion"
    - Include specific measurements with units: "150mm", "25.5mm", "2.5mm radius"
    - Use OpenSCAD-compatible terms: "linear_extrude", "rotate", "translate", "difference"
    - Avoid vague descriptions like "big", "small", "round" - use specific measurements
    - Structure your response as a technical specification document
    
    ERROR HANDLING AND LIMITS:
    - If the image is too complex, focus on the MAIN geometric elements only
    - If you cannot analyze the image after 3 attempts, provide a basic geometric description
    - For complex objects like furniture, break down into simple geometric components
    - Do not get stuck in analysis loops - provide the best technical description possible
    
    EXAMPLE FORMAT:
    "The object is a triangular wedge with the following specifications:
    - Base triangle: 200mm base width, 100mm height, right-angled at origin
    - Extrusion: 300mm length along Z-axis
    - Material: appears solid, no internal cavities
    - Surface: smooth finish, no visible texture
    - Orientation: base triangle lies in XY plane, right angle at (0,0,0)
    - Geometry: can be created using linear_extrude of a triangle polygon"
    
    Your response must be a structured technical specification that GPT-4o can directly convert 
    into functional OpenSCAD code with exact dimensions and geometric relationships.
  expected_output: >
    A precise, technical specification with exact dimensions, geometric primitives, spatial relationships, 
    and measurable features that can be directly converted into OpenSCAD code by GPT-4o. Must include 
    specific measurements in millimeters and OpenSCAD-compatible geometric descriptions.
  agent: visualizer

generate_cad:
  description: >
    Using the technical description from the image analysis, generate ONLY OpenSCAD code that creates 
    a functional 3D CAD model. The output must be pure OpenSCAD code that can be compiled and exported to STL.
    
    WORKFLOW:
    1. FIRST: Use the OpenSCAD Knowledge Base tool to get best practices and patterns for the object type
    2. SECOND: Generate initial OpenSCAD code following the knowledge base guidelines
    3. THIRD: Use the OpenSCAD Validator tool to check and correct any syntax issues
    4. FOURTH: Output the final validated OpenSCAD code
    
    CRITICAL REQUIREMENTS:
    1. Generate ONLY OpenSCAD code - NO explanations, NO markdown formatting, NO text outside the code
    2. NEVER include markdown code blocks (```openscad or ```) - output pure OpenSCAD syntax only
    3. Use OpenSCAD primitives (cube, cylinder, sphere, etc.) with exact dimensions
    4. Use transformations (translate, rotate, scale) with precise values
    5. Implement boolean operations (union, difference, intersection) as needed
    6. Make the model parametric using variables for dimensions
    7. Add clear comments to explain major operations
    8. Ensure the code compiles without errors in OpenSCAD
    9. The code must represent the 3D object described in the technical analysis
    
    OPENSCAD SYNTAX VALIDATION RULES:
    - Start directly with OpenSCAD code, no markdown formatting
    - Use proper variable declarations: variable_name = value;
    - Ensure all parentheses, brackets, and braces are properly matched
    - Use semicolons to end statements
    - For polyhedron: ensure faces are defined with counter-clockwise orientation
    - Validate that all faces form valid polygons
    - Use proper OpenSCAD functions and syntax
    
    GEOMETRY VALIDATION:
    - Ensure all dimensions are positive numbers
    - Verify that boolean operations are valid
    - Check that transformations don't create degenerate geometry
    - For complex shapes, prefer simple primitives over polyhedron when possible
    - Use linear_extrude() for 2D to 3D conversions when appropriate
    
    KNOWLEDGE BASE INTEGRATION:
    - Always consult the OpenSCAD Knowledge Base tool before generating code
    - Use realistic dimensions (400-800mm for furniture, not meters)
    - Follow furniture-specific guidelines when applicable
    - Use proper $fn parameters for smooth circular objects
    - Avoid common mistakes like 2D objects in 3D context
    
    The output must be pure OpenSCAD syntax that can be directly copied and pasted into OpenSCAD, 
    compiled successfully, and exported to STL format for 3D printing.
  expected_output: >
    Pure OpenSCAD code only, with no explanatory text or markdown formatting. The code must compile 
    directly in OpenSCAD and be ready for STL export. No markdown code blocks should be included.
  agent: cad_generator
  context: [analyze_image]
